NAME := groom
VERSION := $(shell git describe --tags --abbrev=0)
REVISION := $(shell git rev-parse --short HEAD)
LDFLAGS := -X 'main.version=$(VERSION)' \
	-X 'main.revision=$(REVISION)'

## Build binaries and run in debug mode
run-debug: build
	go run -race *.go \
		-script script.sh \
		-target github.com/kenju \
		-concurrency 8 \
		-debug

## Build binaries and run in production mode
run: build
	./go-groom \
		-script script.sh \
		-target github.com/kenju \
		-concurrency 8

## Setup
setup:
	go get github.com/golang/lint/golint
	go get golang.org/x/tools/cmd/goimports
	go get github.com/Songmu/make2help/cmd/make2help
	go get github.com/rakyll/gotest


## Update dependencies
update:
	GO111MODULE=on go get github.com/kenju/go-pipeline

## Run tests
test: setup
	gotest ./... -v -parallel=4

## Lint
lint:
	go vet $$(go list)
	for pkg in $$(go list); do \
		golint -set_exit_status $$pkg || exit $$?; \
	done

## Format source codes
fmt:
	goimports -w main.go

## Build binaries
build:
	go build -ldflags "$(LDFLAGS)"

## View traced file generated by runtime/trace
view-trace:
	go tool trace trace.out

## Update CHANGELOG.md
changelog:
	auto-changelog -t keepachangelog
	git commit -am "update CHANGELOG"

## Show help
help:
	@make2help $(MAKEFILE_LIST)

.PHONY: setup deps update test lint help
